{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst startBtn = document.querySelector('.input-btn');\nconst dateInput = document.querySelector('#datetime-picker');\nconst daysEl = document.querySelector('[data-days]');\nconst hoursEl = document.querySelector('[data-hours]');\nconst minutesEl = document.querySelector('[data-minutes]');\nconst secondsEl = document.querySelector('[data-seconds]');\n\nstartBtn.disabled = true;\n\nlet selectedDate = null;\nlet timerId = null;\n\nflatpickr('#datetime-picker', {\n  dateFormat: 'Y-m-d H:i',\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  onClose(selectedDates) {\n    selectedDate = selectedDates[0];\n\n    if (selectedDate <= new Date()) {\n      iziToast.error({\n        title: 'Помилка',\n        message: 'Будь ласка, оберіть дату в майбутньому',\n        position: 'topRight',\n        timeout: 4000,\n      });\n      startBtn.disabled = true;\n    } else {\n      startBtn.disabled = false;\n    }\n  },\n});\n\nstartBtn.addEventListener('click', () => {\n  startBtn.disabled = true;\n  dateInput.disabled = true;\n\n  timerId = setInterval(() => {\n    const now = new Date();\n    const timeDiff = selectedDate - now;\n\n    if (timeDiff <= 0) {\n      clearInterval(timerId);\n      updateTimerUI(0);\n      dateInput.disabled = false;\n      startBtn.disabled = true;\n      return;\n    }\n\n    updateTimerUI(timeDiff);\n  }, 1000);\n});\n\nfunction updateTimerUI(ms) {\n  const { days, hours, minutes, seconds } = convertMs(ms);\n\n  daysEl.textContent = addLeadingZero(days);\n  hoursEl.textContent = addLeadingZero(hours);\n  minutesEl.textContent = addLeadingZero(minutes);\n  secondsEl.textContent = addLeadingZero(seconds);\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return value.toString().padStart(2, '0');\n}\n"],"names":["startBtn","dateInput","daysEl","hoursEl","minutesEl","secondsEl","selectedDate","timerId","flatpickr","selectedDates","iziToast","timeDiff","updateTimerUI","ms","days","hours","minutes","seconds","convertMs","addLeadingZero","value"],"mappings":"2GAKA,MAAMA,EAAW,SAAS,cAAc,YAAY,EAC9CC,EAAY,SAAS,cAAc,kBAAkB,EACrDC,EAAS,SAAS,cAAc,aAAa,EAC7CC,EAAU,SAAS,cAAc,cAAc,EAC/CC,EAAY,SAAS,cAAc,gBAAgB,EACnDC,EAAY,SAAS,cAAc,gBAAgB,EAEzDL,EAAS,SAAW,GAEpB,IAAIM,EAAe,KACfC,EAAU,KAEdC,EAAU,mBAAoB,CAC5B,WAAY,YACZ,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,QAAQC,EAAe,CACrBH,EAAeG,EAAc,CAAC,EAE1BH,GAAgB,IAAI,MACtBI,EAAS,MAAM,CACb,MAAO,UACP,QAAS,yCACT,SAAU,WACV,QAAS,GACjB,CAAO,EACDV,EAAS,SAAW,IAEpBA,EAAS,SAAW,EAEvB,CACH,CAAC,EAEDA,EAAS,iBAAiB,QAAS,IAAM,CACvCA,EAAS,SAAW,GACpBC,EAAU,SAAW,GAErBM,EAAU,YAAY,IAAM,CAE1B,MAAMI,EAAWL,EADL,IAAI,KAGhB,GAAIK,GAAY,EAAG,CACjB,cAAcJ,CAAO,EACrBK,EAAc,CAAC,EACfX,EAAU,SAAW,GACrBD,EAAS,SAAW,GACpB,MACD,CAEDY,EAAcD,CAAQ,CACvB,EAAE,GAAI,CACT,CAAC,EAED,SAASC,EAAcC,EAAI,CACzB,KAAM,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAE,EAEtDX,EAAO,YAAciB,EAAeL,CAAI,EACxCX,EAAQ,YAAcgB,EAAeJ,CAAK,EAC1CX,EAAU,YAAce,EAAeH,CAAO,EAC9CX,EAAU,YAAcc,EAAeF,CAAO,CAChD,CAEA,SAASC,EAAUL,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASE,EAAeC,EAAO,CAC7B,OAAOA,EAAM,SAAU,EAAC,SAAS,EAAG,GAAG,CACzC"}